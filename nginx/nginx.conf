# Define upstream servers for load balancing
upstream web_servers {
    server web:3000;
    # Additional web servers will be automatically included when scaled
}

upstream api_servers {
    server api:8080;
    # Additional API servers will be automatically included when scaled
}

server {
    listen 80;
    
    # Enable error logging
    error_log /var/log/nginx/error.log debug;
    
    # Security settings
    server_tokens off;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK";
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://api_servers/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # API health check
    location /api/health {
        proxy_pass http://api_servers/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Web frontend
    location / {
        proxy_pass http://web_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
} 